#include <Servo.h> 
 
Servo myservo;  
 
// Control and feedback pins
int servoPin = 9;
int feedbackPin = A0;
int buttonPin = 2;
 
// Calibration values
int minDegrees;
int maxDegrees;
int minFeedback;
int maxFeedback;
int tolerance = 2; // max feedback measurement error

//Variables
int currentPosition;
boolean blindClosed;
boolean blindOpen;
 
/*
  This function establishes the feedback values for 2 positions of the servo.
  With this information, we can interpolate feedback values for intermediate positions
*/
 
void setup() 
{ 
  Serial.begin(9600);
  digitalWrite(buttonPin, INPUT_PULLUP);
  myservo.attach(servoPin); 
  calibrate(myservo, feedbackPin, 20, 160);  // calibrate for the 20-160 degree range
  Seek(myservo, feedbackPin, 150);
  blindClosed = true;
  blindOpen = false;
  myservo.detach();
} 
 
void loop()
{
  if (digitalRead(buttonPin) == LOW) {
    delay(100); //debounce
    if ((blindClosed == true) && (blindOpen == false)) {
      openBlinds();
      blindClosed = false;
      blindOpen = true;
    }
    else if ((blindClosed == false) && (blindOpen == true)) {
      closeBlinds();
      blindClosed = true;
      blindOpen = false;
    }
  }
  //delay(100);
}

void calibrate(Servo servo, int analogPin, int minPos, int maxPos)
{
  // Move to the minimum position and record the feedback value
  servo.write(minPos);
  minDegrees = minPos;
  delay(2000); // make sure it has time to get there and settle
  minFeedback = analogRead(analogPin);
  
  // Move to the maximum position and record the feedback value
  servo.write(maxPos);
  maxDegrees = maxPos;
  delay(2000); // make sure it has time to get there and settle
  maxFeedback = analogRead(analogPin);
}

void Seek(Servo servo, int analogPin, int pos)
{
  // Start the move...
  servo.write(pos);
  
  // Calculate the target feedback value for the final position
  int target = map(pos, minDegrees, maxDegrees, minFeedback, maxFeedback); 
  
  // Wait until it reaches the target
  while(abs(analogRead(analogPin) - target) > tolerance){} // wait...
}

int getPos(int analogPin)
{
  return map(analogRead(analogPin), minFeedback, maxFeedback, minDegrees, maxDegrees);
}

int openBlinds() {
  myservo.attach(servoPin); 
  Seek(myservo, feedbackPin, 90);
  myservo.detach();
}

int closeBlinds() {
  myservo.attach(servoPin); 
  Seek(myservo, feedbackPin, 150);
  myservo.detach();
}
